# Generated by manual fix on 2025-06-28 19:15

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("debates", "0011_add_created_by_to_topic"),
    ]

    operations = [
        # Create missing tables if they don't exist
        migrations.RunSQL(
            """
            -- Create debates_moderationaction table if it doesn't exist
            CREATE TABLE IF NOT EXISTS debates_moderationaction (
                id BIGSERIAL PRIMARY KEY,
                action VARCHAR(10) NOT NULL CHECK (action IN (
                    'mute', 'unmute', 'remove', 'warn', 'kick')),
                reason TEXT NOT NULL DEFAULT '',
                timestamp TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                moderator_id INTEGER NOT NULL REFERENCES users_user(id),
                session_id BIGINT NOT NULL REFERENCES debates_debatesession(id),
                target_user_id INTEGER REFERENCES users_user(id)
            );

            -- Create index if table was just created
            CREATE INDEX IF NOT EXISTS debates_moderationaction_moderator_id_idx
                ON debates_moderationaction(moderator_id);
            CREATE INDEX IF NOT EXISTS debates_moderationaction_session_id_idx
                ON debates_moderationaction(session_id);
            CREATE INDEX IF NOT EXISTS debates_moderationaction_target_user_id_idx
                ON debates_moderationaction(target_user_id);
            """,
            reverse_sql="DROP TABLE IF EXISTS debates_moderationaction;",
        ),
        migrations.RunSQL(
            """
            -- Create debates_participation table if it doesn't exist
            CREATE TABLE IF NOT EXISTS debates_participation (
                id BIGSERIAL PRIMARY KEY,
                role VARCHAR(20) NOT NULL DEFAULT 'viewer' CHECK (role IN (
                    'participant', 'viewer')),
                side VARCHAR(20) CHECK (side IN ('proposition', 'opposition')),
                joined_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                is_muted BOOLEAN NOT NULL DEFAULT FALSE,
                warnings_count INTEGER NOT NULL DEFAULT 0,
                messages_sent INTEGER NOT NULL DEFAULT 0,
                has_voted BOOLEAN NOT NULL DEFAULT FALSE,
                is_participant BOOLEAN NOT NULL DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                user_id INTEGER NOT NULL REFERENCES users_user(id),
                session_id BIGINT NOT NULL REFERENCES debates_debatesession(id),
                UNIQUE(user_id, session_id)
            );
            
            -- Create indexes if table was just created
            CREATE INDEX IF NOT EXISTS debates_participation_user_id_idx ON debates_participation(user_id);
            CREATE INDEX IF NOT EXISTS debates_participation_session_id_idx ON debates_participation(session_id);
            """,
            reverse_sql="DROP TABLE IF EXISTS debates_participation;",
        ),
        migrations.RunSQL(
            """
            -- Create debates_sessiontranscript table if it doesn't exist
            CREATE TABLE IF NOT EXISTS debates_sessiontranscript (
                id BIGSERIAL PRIMARY KEY,
                content TEXT NOT NULL DEFAULT '',
                formatted_content TEXT NOT NULL DEFAULT '',
                generated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                is_processed BOOLEAN NOT NULL DEFAULT FALSE,
                processing_started_at TIMESTAMP WITH TIME ZONE,
                processing_completed_at TIMESTAMP WITH TIME ZONE,
                total_messages INTEGER NOT NULL DEFAULT 0,
                total_participants INTEGER NOT NULL DEFAULT 0,
                word_count INTEGER NOT NULL DEFAULT 0,
                created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                session_id BIGINT NOT NULL UNIQUE REFERENCES debates_debatesession(id),
                generated_by_id INTEGER REFERENCES users_user(id)
            );
            
            -- Create indexes if table was just created
            CREATE INDEX IF NOT EXISTS debates_sessiontranscript_session_id_idx ON debates_sessiontranscript(session_id);
            CREATE INDEX IF NOT EXISTS debates_sessiontranscript_generated_by_id_idx ON debates_sessiontranscript(generated_by_id);
            """,
            reverse_sql="DROP TABLE IF EXISTS debates_sessiontranscript;",
        ),
        migrations.RunSQL(
            """
            -- Create debates_message table if it doesn't exist
            CREATE TABLE IF NOT EXISTS debates_message (
                id BIGSERIAL PRIMARY KEY,
                content TEXT NOT NULL,
                timestamp TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                message_type VARCHAR(20) NOT NULL DEFAULT 'text' CHECK (message_type IN ('text', 'system', 'join', 'leave', 'image')),
                image_url VARCHAR(200),
                is_edited BOOLEAN NOT NULL DEFAULT FALSE,
                edited_at TIMESTAMP WITH TIME ZONE,
                is_deleted BOOLEAN NOT NULL DEFAULT FALSE,
                deleted_at TIMESTAMP WITH TIME ZONE,
                is_system_message BOOLEAN NOT NULL DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                session_id BIGINT NOT NULL REFERENCES debates_debatesession(id),
                author_id INTEGER REFERENCES users_user(id),
                user_id INTEGER REFERENCES users_user(id)
            );
            
            -- Create indexes if table was just created
            CREATE INDEX IF NOT EXISTS debates_message_session_id_idx ON debates_message(session_id);
            CREATE INDEX IF NOT EXISTS debates_message_author_id_idx ON debates_message(author_id);
            CREATE INDEX IF NOT EXISTS debates_message_user_id_idx ON debates_message(user_id);
            CREATE INDEX IF NOT EXISTS debates_message_timestamp_idx ON debates_message(timestamp);
            """,
            reverse_sql="DROP TABLE IF EXISTS debates_message;",
        ),
    ]
